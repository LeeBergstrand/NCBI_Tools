/* $Id: Gene_commentary.cpp 103491 2007-05-04 17:18:18Z kazimird $
 * ===========================================================================
 *
 *                            PUBLIC DOMAIN NOTICE
 *               National Center for Biotechnology Information
 *
 *  This software/database is a "United States Government Work" under the
 *  terms of the United States Copyright Act.  It was written as part of
 *  the author's official duties as a United States Government employee and
 *  thus cannot be copyrighted.  This software/database is freely available
 *  to the public for use. The National Library of Medicine and the U.S.
 *  Government have not placed any restriction on its use or reproduction.
 *
 *  Although all reasonable efforts have been taken to ensure the accuracy
 *  and reliability of the software and data, the NLM and the U.S.
 *  Government do not and cannot warrant the performance or results that
 *  may be obtained by using this software or data. The NLM and the U.S.
 *  Government disclaim all warranties, express or implied, including
 *  warranties of performance, merchantability or fitness for any particular
 *  purpose.
 *
 *  Please cite the author in any work or product based on this material.
 *
 * ===========================================================================
 *
 * Author:  .......
 *
 * File Description:
 *   .......
 *
 * Remark:
 *   This code was originally generated by application DATATOOL
 *   using the following specifications:
 *   'entrezgene.asn'.
 */

// standard includes
#include <ncbi_pch.hpp>

// generated includes
#include <objects/entrezgene/Gene_commentary.hpp>

// generated classes

BEGIN_NCBI_SCOPE

BEGIN_objects_SCOPE // namespace ncbi::objects::

// destructor
CGene_commentary::~CGene_commentary(void)
{
}

// some useful predicates for finding particular CGene_commentary

bool IsGene_commentaryHeading::operator() (const CRef<CGene_commentary> comment) const {
    if (comment->IsSetHeading()){
        return (comment->GetHeading() == _heading );
    }
    return false;
}
bool IsGene_commentaryType::operator () (const CRef<CGene_commentary> comment) const {
    if (comment->IsSetType()){
        return (comment->GetType() == _type);
    }
    return false;
}
bool IsGene_commentaryHeadingAndType::operator () (const CRef<CGene_commentary> comment) const {
    if (comment->IsSetHeading() && comment->IsSetType()){
        return (comment->GetHeading() == _heading
                && comment->GetType() == _type);
    }
    return false;
}


END_objects_SCOPE // namespace ncbi::objects::

END_NCBI_SCOPE

/* Original file checksum: lines: 65, chars: 1915, CRC32: edceba08 */
