/* $Id: Variation.cpp 303105 2011-06-07 14:58:54Z astashya $
 * ===========================================================================
 *
 *                            PUBLIC DOMAIN NOTICE
 *               National Center for Biotechnology Information
 *
 *  This software/database is a "United States Government Work" under the
 *  terms of the United States Copyright Act.  It was written as part of
 *  the author's official duties as a United States Government employee and
 *  thus cannot be copyrighted.  This software/database is freely available
 *  to the public for use. The National Library of Medicine and the U.S.
 *  Government have not placed any restriction on its use or reproduction.
 *
 *  Although all reasonable efforts have been taken to ensure the accuracy
 *  and reliability of the software and data, the NLM and the U.S.
 *  Government do not and cannot warrant the performance or results that
 *  may be obtained by using this software or data. The NLM and the U.S.
 *  Government disclaim all warranties, express or implied, including
 *  warranties of performance, merchantability or fitness for any particular
 *  purpose.
 *
 *  Please cite the author in any work or product based on this material.
 *
 * ===========================================================================
 *
 * Author:  .......
 *
 * File Description:
 *   .......
 *
 * Remark:
 *   This code was originally generated by application DATATOOL
 *   using the following specifications:
 *   'variation.asn'.
 */

// standard includes
#include <ncbi_pch.hpp>

// generated includes
#include <objects/variation/Variation.hpp>

// generated classes

BEGIN_NCBI_SCOPE

BEGIN_objects_SCOPE // namespace ncbi::objects::

// destructor
CVariation::~CVariation(void)
{
}


void CVariation::Index()
{
    //process consequences
    if(this->IsSetConsequence()) {
        NON_CONST_ITERATE(CVariation::TConsequence, it, this->SetConsequence()) {
            CVariation::TConsequence::value_type::TObjectType& cons = **it;
            if(!cons.IsVariation()) {
                continue;
            }
            cons.SetVariation().m_consequence_parent = this;
            cons.SetVariation().Index();
        }
    }


    //procsess subvariations if this is a set
    if(this->IsSetData() 
       && this->GetData().IsSet() 
       && this->GetData().GetSet().IsSetVariations()) 
    {
        NON_CONST_ITERATE(CVariation::TData::TSet::TVariations, it, this->SetData().SetSet().SetVariations()) {
            CVariation& v = **it;
            v.m_parent = this;
            v.Index();
        }   
    }
}

END_objects_SCOPE // namespace ncbi::objects::

END_NCBI_SCOPE

/* Original file checksum: lines: 57, chars: 1728, CRC32: 989de1e */
