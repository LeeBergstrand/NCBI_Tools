/* $Id: Score.cpp 199287 2010-08-02 16:36:25Z vasilche $
 * ===========================================================================
 *
 *                            PUBLIC DOMAIN NOTICE
 *               National Center for Biotechnology Information
 *
 *  This software/database is a "United States Government Work" under the
 *  terms of the United States Copyright Act.  It was written as part of
 *  the author's official duties as a United States Government employee and
 *  thus cannot be copyrighted.  This software/database is freely available
 *  to the public for use. The National Library of Medicine and the U.S.
 *  Government have not placed any restriction on its use or reproduction.
 *
 *  Although all reasonable efforts have been taken to ensure the accuracy
 *  and reliability of the software and data, the NLM and the U.S.
 *  Government do not and cannot warrant the performance or results that
 *  may be obtained by using this software or data. The NLM and the U.S.
 *  Government disclaim all warranties, express or implied, including
 *  warranties of performance, merchantability or fitness for any particular
 *  purpose.
 *
 *  Please cite the author in any work or product based on this material.
 *
 * ===========================================================================
 *
 * Author:  .......
 *
 * File Description:
 *   .......
 *
 * Remark:
 *   This code was originally generated by application DATATOOL
 *   using the following specifications:
 *   'seqalign.asn'.
 */

// standard includes
#include <ncbi_pch.hpp>

// generated includes
#include <objects/seqalign/Score.hpp>

// generated classes


BEGIN_NCBI_SCOPE

BEGIN_objects_SCOPE // namespace ncbi::objects::

// destructor
CScore::~CScore(void)
{
}


void CReadSharedScoreIdHook::ReadClassMember(CObjectIStream& in,
                                             const CObjectInfoMI& mbr)
{
    CType<CScore>::Get(mbr.GetClassObject())->SetId(ReadSharedObject_id(in));
}


CObjectTypeInfoMI CReadSharedScoreIdHook::x_GetMember(void)
{
    CObjectTypeInfo score_type = CType<CScore>();
    return score_type.FindMember("id");
}


void CReadSharedScoreIdHook::SetHook(CObjectIStream& in)
{
    CRef<CReadSharedScoreIdHook> hook(new CReadSharedScoreIdHook);
    x_GetMember().SetLocalReadHook(in, hook);
}


void CReadSharedScoreIdHook::SetGlobalHook(void)
{
    CRef<CReadSharedScoreIdHook> hook(new CReadSharedScoreIdHook);
    x_GetMember().SetGlobalReadHook(hook);
}


END_objects_SCOPE // namespace ncbi::objects::

END_NCBI_SCOPE

/* Original file checksum: lines: 57, chars: 1714, CRC32: d8b0c428 */
