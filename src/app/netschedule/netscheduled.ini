; General purpose server parameters
[server]

; When true server recreates the [bdb].path directory and reinits the
; database, throwing old one away.
; Default: false
reinit=false

; maximum number of simultaneous connections
; Default: 100
max_connections=1000

; maximum number of processing threads
; Default: 25
max_threads=25

; initial number of threads created for incoming requests
; Default: 10
init_threads=10

; TCP/IP port number server responds on
; Default: 9100
port=9101

; Use name instead of IP address in job id
; Default: false
use_hostname=false

; Network inactivity timeout in seconds
; Default: 10
network_timeout=180

; Server side logging
; Default: true
log=true

; if true then each job in a batch submit is logged as if it were
; an individual submit
; The flag is taken into consideration only if log == true
; Default: true
log_batch_each_job=true

; If true then the notification thread will produce log records
; The flag is taken into consideration only if log == true
; Default: false
log_notification_thread=false

; if true then the cleaning thread will produce log records
; The flag is taken into consideration only if log == true
; Default: true
log_cleaning_thread=false

; if true then the execution watcher thread will produce log records
; The flag is taken into consideration only if log == true
; Default: true
log_execution_watcher_thread=false

; if true then the statistics thread will produce log records
; The flag is taken into consideration only if log == true
; Default: true
log_statistics_thread=true

; Max number of jobs deleted in one garbage collector iteration.
; See also the 'purge_timeout' and 'scan_batch_size' parameters.
; It is recommended to have del_batch_size and purge_timeout in balance with
; the incoming number of jobs. Otherwise the actual deletion of records is
; delayed and unnecessery records in the DB may slowdown netschedule.
; Default: 100
del_batch_size=100

; Max number of jobs marked for deletion during one garbage collector iteration.
; Default: 200
markdel_batch_size=200

; Max number of jobs tested for expiration in one garbage collector iteration.
; It is recommended that scan_batch_size > del_batch_size.
; Default: 10000
scan_batch_size=10000

; Interval between garbage collector runs
; Default: 0.1 sec
purge_timeout=0.1

; Max number of affinities which a client is allowed to report as preferred.
; Default: 10000
max_affinities=10000

; A list of hosts from which administrators can connect to the server.
; The separators for the host names are: ';', ',', space, '\n', '\r'.
; Default: empty list which means any host is allowed.
admin_host=

; A list of client names which can execute commands requiring administrative
; privileges. The separators for the client names are: ';', ',', space, '\n', '\r'.
; Default: empty list which means that nobody will be able to execute
;          administrative commands.
admin_client_name=netschedule_admin, netschedule_control




; Affinity garbage collector parameters. See CXX-2838

; If the affinity registry has more records than specified by this parameter
; then aggressive cleaning of the registry is switched on.
; Default: 90 (%, integer)
affinity_high_mark_percentage=90

; If the affinity registry has less records than specified by this parameter
; then no cleaning registry will be performed.
; If the number of records is between affinity_low_mark_percentage and
; affinity_high_mark_percentage then a normal cleaning of the registry is
; switched on respecting the affinity_dirt_percentage value (see below).
; Default: 50 (%, integer)
affinity_low_mark_percentage=50

; Maximum number of records to be removed at one time by the garbage collector
; when aggressive cleaning is switched on.
; Only those records which have no jobs associated with them are deleted.
; Default: 1000
affinity_high_removal=1000

; Maximum number of records to be removed at one time by the garbage collector
; when aggressive cleaning is switched off.
; Only those records which have no jobs associated with them are deleted.
; Default: 100
affinity_low_removal=100

; If the number of delete candidate records in the registry is less than this
; value and the number of records the registry has is between
; affinity_low_mark_percentage and affinity_high_mark_percentage then
; there will be no cleaning.
; Default: 20 (%, integer)
affinity_dirt_percentage=20




[Log]

; File name where the server stores the log messages.
file=netscheduled.log


[Diag]
; do not strip any request-start messages
AppLog_Rate_Limit=4294967295



; BerkeleyDB related parameters
[bdb]

; Version of the storage data model to be forced at the start time.
; If a database exists and is not recreated at the startup, the server reads the
; data model version and then checks against the force_storage_version value.
; If the value does not match then the server does not start.
; Default: the current version of the storage data model.
; force_storage_version=




; Directory where the database files are stored.
; It is recommended to have this directory on the fastest available filesystem.
; No default, the parameter is mandatory.
path=data

; how many queue databases to open on start. Berkeley DB has instability
; when you open/close databases during other database operation.
; We pre-allocate some amount of databases to open on start and re-use them
; for all actual queues. This parameter effectively sets the limit on the
; number of queues per server, but Berkeley DB limited in this anyway (safe
; number is no more than 50 queues).
; Default: 50
max_queues=50

; amount of memory allocated by BerkeleyDB for the database cache
; Berkeley DB page cache) (More is better, see private_env though)
; Default: 0 - turning on BerkeleyDB default
mem_size=100M

; Maximum number of mutexes.
; Default: 0 - turning on BerkeleyDB default
mutex_max=1000000

; maximum number of locks, lockers, and lock objects
; should be increased for bulk transactions (or large number of queues)
; Default: 0 - turning on BerkeleyDB default
max_locks=500000

; Default: 0 - turning on BerkeleyDB default
max_lockers=250000

; Default: 0 - turning on BerkeleyDB default
max_lockobjects=1000000

; when non 0 transaction LOG will be placed to memory for better performance
; as a result transactions become non-durable and there is a risk of
; loosing the data if server fails
; (set to at least 100M if planned to have bulk transactions)
; Default: 0
log_mem_size=150M

; Checkpoint threshold in KB of data written
; Default: 5000
checkpoint_kb=5000

; Checkpoint threshold in minutes since last checkpoint
; Default: 5
checkpoint_min=5

; use syncronous or asyncronous writes (used with transactions)
; Default: false
sync_transactions=false

; Direct IO for database files
; Default: false
direct_db=false

; Direct IO for transaction logs
; Default: false
direct_log=false

; use private BerkeleyDB environment. If true, NS does not use shared memory,
; but BDB has strange memory allocation behavior, so do not use with mem_size
; larger than 10M.
; Default: false.
private_env=false



; Sample queue class
; Queue class can specify all the parameters which appear in the [queue_...]
; sections (except of the 'class' parameter.
; Later on a queue can specify a class as a basis for a queue (which means to
; take all the parameters from the queue class) and overwrite only those which
; the queue needs to have of different values.
[qclass_MyQueueClass]

timeout=1800

; ... the rest of parameters




; Sample queue
[queue_TEST]


class=MyQueueClass

; Inactivity timeout for non-running and non-reading jobs which triggers
; the job to be marked for deletion.
; Default: 3600 (integer, seconds)
timeout=3600

; Interval for available job notifications when they are sent with high frequency.
; Default: 0.1 (float, seconds)
notif_hifreq_interval=0.1

; Period of time within which available job notifications are sent with high
; frequency if there were no requests from a worker node which
; requested a job earlier.
; Default: 5 (integer, seconds)
notif_hifreq_period=5

; Multiplier for the notif_hifreq_interval to calculate the interval between
; notifications when they are sent with low frequency.
; Default: 50 (integer)
notif_lofreq_mult=50

; Delay for sending UDP notifications that there is a vacant job for all worker
; nodes except one. If configured (i.e. != 0) and there are more than one
; candidates for notifications then the one to send to will be picked randomly.
; Default: 0.0 (float, seconds)
notif_handicap=0.0

; The size of a buffer for reading jobs from a database before dumping them.
; Default: 100 (jobs)
dump_buffer_size=100

; If there is no information about a job in the Running or Reading states
; within this timeout then the server considers this try as failed and moves
; the job to the appropriate state.
; The timeout is used only if there were no individual running or reading
; timeouts provided by the user.
; Default: 3600 (integer, seconds)
run_timeout=1800

; The time interval which is used to check job expiration.
; CANNOT be dynamically reconfigured
; Default: 3600 (integer, seconds)
run_timeout_precision=30

; List of client names and their versions which are allowed for the queue.
; When a client connects it is checked against this list and if the name
; is not in the list or the version is below allowed then the client will be rejected.
; The separators for the programs are: ';', ','.
; E.g.: program=test 2.0.0; test 1.0.0; Cgi_Tunnel2Grid 1.0.0
; Default: empty string which means there are no restrictions.
program=

; Number of retries to execute a job.
; Default: 0
failed_retries=3

; The maximum time a job will be kept in a blacklist.
; 0 means that a job will not be in the blacklist at all.
; Default: 2147483647 (integer, seconds)
blacklist_time=2147483647

; Maximum size of a job input.
; Default: 2048 (bytes)
max_input_size=2048

; Maximum size of a job output.
; Default: 2048 (bytes)
max_output_size=2048

; A list of hosts which are allowed to submit jobs.
; The separators for the host names are: ';', ',', space, '\n', '\r'.
; Default: empty string which means that any host can submit jobs.
subm_host=

; A list of hosts which are allowed to request jobs for execution.
; The separators for the host names are: ';', ',', space, '\n', '\r'.
; Default: empty string which means that any host can request jobs for execution.
wnode_host=

; Workernode inactivity timeout in seconds.
; If a registered worker node has no activity within the given timeout then it
; is marked as inactive and its affinities are cleared
; Default: 40 seconds
wnode_timeout=40

; Pending jobs timeout.
; The timeout is measured starting from the submit time. If the job is still in
; the pending state (regardless of the pending->running->pending loops) when the
; timeout is detected, then the job will be deleted.
; Default: 60*60*24*7=604800 sec., i.e. 1 week
pending_timeout=604800

; If the job is in the Pending state because its affinity is exclusively
; assigned to the worker nodes that are busy, then, after the specified
; timeout expires, the job will become eligible to be scheduled to ANY worker
; node that requests a job (using 'any_aff' or 'exclusive_new_aff' flags).
; If this timeout is configured as a non-zero value, then the procedure of
; picking a job for a worker node is altered as follows:
; - first a job is searched as usual
; - second the first pending job is checked. If it stays Pending longer than
;   this timeout then the job is given to the worker node. Otherwise the first
;   job is given
; Note: this alteration is only for requests with
; 'any_aff' or 'exclusive_new_aff' flags set on.
; The timeout can be given with microseconds precision.
; Default: 0.0 seconds
max_pending_wait_timeout=0.0

