# ===========================================================================
#
#                            PUBLIC DOMAIN NOTICE
#               National Center for Biotechnology Information
#
#  This software/database is a "United States Government Work" under the
#  terms of the United States Copyright Act.  It was written as part of
#  the author's official duties as a United States Government employee and
#  thus cannot be copyrighted.  This software/database is freely available
#  to the public for use. The National Library of Medicine and the U.S.
#  Government have not placed any restriction on its use or reproduction.
#
#  Although all reasonable efforts have been taken to ensure the accuracy
#  and reliability of the software and data, the NLM and the U.S.
#  Government do not and cannot warrant the performance or results that
#  may be obtained by using this software or data. The NLM and the U.S.
#  Government disclaim all warranties, express or implied, including
#  warranties of performance, merchantability or fitness for any particular
#  purpose.
#
#  Please cite the author in any work or product based on this material.
#
# ===========================================================================


# compilers
CC = gcc -c
CP = g++ -c

# linkers
LD = $(TOP)/build/ld.linux.gcc.sh gcc
LP = $(TOP)/build/ld.linux.gcc.sh g++

# tool options
ifeq (prof, $(BUILD))
	PROF := -pg
endif

ifeq (dbg, $(BUILD))
	OPT := -g -Wall
	NOPT := -g -Wall
	PED := -std=c99 -ansi -pedantic
else

ifeq (x86_64, $(ARCH))
	OPT := -O3 -Wall
else
	OPT := -O3 -march=pentium4
endif
endif

BSTATIC = -Wl,-Bstatic
BDYNAMIC = -Wl,-Bdynamic
BEGIN_WHOLE_ARCHIVE = -Wl,-whole-archive
END_WHOLE_ARCHIVE = -Wl,-no-whole-archive

## build rules

# assembly
%.o: %.s
	$(CC) -o $@ $<

# executable image
%.o: %.c
	$(CC) -o $@ $(OPT) -D_LOGGING $(CFLAGS) -MD $<
%.o: %.cpp
	$(CP) -o $@ $(OPT) -D_LOGGING $(CPFLAGS) -MD $<
%.o: %.cxx
	$(CP) -o $@ $(OPT) -D_LOGGING $(CPFLAGS) -MD $<

# non-optimized executable image
%.nopt.o: %.c
	$(CC) -o $@ $(NOPT) -D_LOGGING $(CFLAGS) -MD $<
%.nopt.o: %.cpp
	$(CP) -o $@ $(NOPT) -D_LOGGING $(CPFLAGS) -MD $<
%.nopt.o: %.cxx
	$(CP) -o $@ $(NOPT) -D_LOGGING $(CPFLAGS) -MD $<

# relocatable image
%.pic.o: %.c
	$(CC) -o $@ -fPIC $(OPT) $(CFLAGS) -MD $<
%.pic.o: %.cpp
	$(CP) -o $@ -fPIC $(OPT) $(CPFLAGS) -MD $<
%.pic.o: %.cxx
	$(CP) -o $@ -fPIC $(OPT) $(CPFLAGS) -MD $<

# non-optimized relocatable image
%.nopt.pic.o: %.c
	$(CC) -o $@ -fPIC $(NOPT) $(CFLAGS) -MD $<
%.nopt.pic.o: %.cpp
	$(CP) -o $@ -fPIC $(NOPT) $(CPFLAGS) -MD $<
%.nopt.pic.o: %.cxx
	$(CP) -o $@ -fPIC $(NOPT) $(CPFLAGS) -MD $<

# relocatable image with kapp logging
%.log.pic.o: %.c
	$(CC) -o $@ -fPIC $(OPT) -D_LOGGING $(CFLAGS) -MD $<
%.log.pic.o: %.cpp
	$(CP) -o $@ -fPIC $(OPT) -D_LOGGING $(CPFLAGS) -MD $<
%.log.pic.o: %.cxx
	$(CP) -o $@ -fPIC $(OPT) -D_LOGGING $(CPFLAGS) -MD $<

# non-optimized relocatable image with kapp logging
%.log.nopt.pic.o: %.c
	$(CC) -o $@ -fPIC $(NOPT) -D_LOGGING $(CFLAGS) -MD $<
%.log.nopt.pic.o: %.cpp
	$(CP) -o $@ -fPIC $(NOPT) -D_LOGGING $(CPFLAGS) -MD $<
%.log.nopt.pic.o: %.cxx
	$(CP) -o $@ -fPIC $(NOPT) -D_LOGGING $(CPFLAGS) -MD $<

# assembly language output
%.s: %.c
	$(CC) -S -o $@ $(OPT) $(CFLAGS) -MD $<
%.s: %.cpp
	$(CP) -S -o $@ $(OPT) $(CPFLAGS) -MD $<
%.s: %.cxx
	$(CP) -S -o $@ $(OPT) $(CPFLAGS) -MD $<

%.nopt.s: %.c
	$(CC) -S -o $@ $(NOPT) $(CFLAGS) -MD $<
%.nopt.s: %.cpp
	$(CP) -S -o $@ $(NOPT) $(CPFLAGS) -MD $<
%.nopt.s: %.cxx
	$(CP) -S -o $@ $(NOPT) $(CPFLAGS) -MD $<

%.pic.s: %.c
	$(CC) -S -o $@ -fPIC $(OPT) $(CFLAGS) -MD $<
%.pic.s: %.cpp
	$(CP) -S -o $@ -fPIC $(OPT) $(CPFLAGS) -MD $<
%.pic.s: %.cxx
	$(CP) -S -o $@ -fPIC $(OPT) $(CPFLAGS) -MD $<

%.nopt.pic.s: %.c
	$(CC) -S -o $@ -fPIC $(NOPT) $(CFLAGS) -MD $<
%.nopt.pic.s: %.cpp
	$(CP) -S -o $@ -fPIC $(NOPT) $(CPFLAGS) -MD $<
%.nopt.pic.s: %.cxx
	$(CP) -S -o $@ -fPIC $(NOPT) $(CPFLAGS) -MD $<
