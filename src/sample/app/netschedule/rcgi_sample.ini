
; General purpose worker node parameters
[server]


; TCP port for control messages (like shutdown, version)
; Worker node can be stopped remotely. It runs special control thread,
; accepts incoming administrative requests (from netschedule_control)
; Can take a ports range (ex. 9300-9310). In this case the system will try 
; to find an available port in the given range
control_port=9300

; Server side logging
log=true
; Log file size(in bytes). When the size of the log file has reached given
; size it will be rotated. Default is 1Mb
; log_file_size = 1000000

; Internal. 
; Delay in seconds node task dispatcher waits for free
; space in the job queue. Lower value usually gives better response
; to shutdown command (CPU traded off)
thread_pool_timeout=5

; Time worker node spends waiting for new jobs without connecting to
; the netschedule server queue. Server sends UPD requests to wake the 
; node up. Bigger values of this parameter reduces the netschedule server
; load in expense of job delivery latency (because of 
; potential loss of UDP packages)
;
job_wait_timeout=10

; The max total number of jobs after which the node will shutdown itself.
; Restarting the node periodically is useful due to accumulating heap 
; fragmentation possible leaks etc.
; default is 0 - means unlimited number of jobs.
; max_total_jobs = 100

; When true, server transforms into a daemon, detached from the 
; current program group (for UNIX only)
;daemon=true

; NetSchedule client configuration
; 
[netschedule_api]
client_name=rcgi_sample_wn

; Specifies NetSchedule service. Format: lb_service_name or host:port
service=NS_test
; Name of the queue (DO NOT use default queue for your application)
queue_name=rcgi_sample

; Time interval in seconds when client is automatically rebalanced
rebalance_time=10
; Number of requests before rebalancing
rebalance_requests=100

; Instructs the worker noded to try to fit its output onto the netschedule's 
; internal storage (its size is about 256Kb). If the data does not fit there
; it will be saved into an external blob storage (netcahe).
; Default value is false
use_embedded_storage = true

; Network storage (NetCache) configuration
;
[netcache_client]

client_name=rcgi_sample_wn

; LB service name
service=NC_test

; If this parameter is set to true then before the job is processed the input data blob 
; will be stored into a file on the local file system and the job will get a stream to 
; that file. 
;cache_input = false

; If this parameter is set to true then the job will get a stream to file on the local 
; file system as an output stream. After job is done the content of this file will be
; stored to a blob in the storage.
;cache_output = true

; Time interval in seconds when client is automatically rebalanced
rebalance_time=10
; Number of requests before rebalancing
rebalance_requests=100
; I/O volume based rebalancing
rebalance_bytes=5000000


