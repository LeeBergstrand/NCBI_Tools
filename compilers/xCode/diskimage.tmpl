#!/bin/sh
EXEC_PATH='@executable_path'

if test -e gbench.dmg; then
  echo Genome Workbench image already exists
  exit 0
fi

pwd
mkdir tmp
cp -r bin/$CONFIGURATION/Genome\ Workbench.app  tmp

echo Adding custom Icon
cp tmp/Genome\ Workbench.app/Contents/MacOS/share/gbench/VolumeIcon.icns tmp/.VolumeIcon.icns

cd tmp/Genome\ Workbench.app/Contents/MacOS

echo Copy 3-rd party dylibs
cp `otool -L Genome\ Workbench | awk '/(netopt)|(sw)/ {print $1}' ` .
echo Copy NCBI dylibs
cp ../../../../lib/* .

chmod +w *

echo Patch dylibs
for i in `find . -name \*.dylib`; do
     for j in `otool -L $i | awk '/(netopt)|(sw)|(Users)/ {print $1}'`; do
         if ! test -e `basename $j`; then
            echo Adding more libs: `basename $j`
   		   cp $j .
   		   chmod +w `basename $j`
   		fi

         install_name_tool -id $EXEC_PATH/`basename $j` $i
         install_name_tool -change $j $EXEC_PATH/`basename $j` $i
     done
done

echo Patch Genome Workbench
for j in `otool -L 'Genome Workbench' | awk '/(netopt)|(sw)|(Users)/ {print $1}'`; do
        install_name_tool -change $j $EXEC_PATH/`basename $j` 'Genome Workbench'
done



EXECS1="
 gbench_plugin_scan
 gbench_cache_agent"
for exe in $EXECS1; do
	echo Patching: $exe
	for j in `otool -L $exe | awk '/(netopt)|(sw)|(Users)/ {print $1}'`; do
	        install_name_tool -change $j $EXEC_PATH/`basename $j` $exe
	done	
done

cd bin
EXECS2="
 gbench_monitor
 gbench_feedback_agent"
for exe in $EXECS2; do
	echo Patching: $exe
	for j in `otool -L $exe | awk '/(netopt)|(sw)|(Users)/ {print $1}'`; do
	        install_name_tool -change $j $EXEC_PATH/`basename $j` $exe
	done	
done



cd ../../../../../
echo Creating disk image
hdiutil create -srcfolder tmp  -volname GBENCH gbench.dmg



rm -r tmp
exit 0
